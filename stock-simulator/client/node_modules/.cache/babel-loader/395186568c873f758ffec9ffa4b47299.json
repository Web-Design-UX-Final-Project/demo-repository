{"ast":null,"code":"var _jsxFileName = \"/Users/prachichatur/Documents/webd/stock-trading-simulator-master/client/src/components/Template/LineChart.jsx\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LineChart = _ref => {\n  let {\n    pastDataPeriod,\n    stockInfo,\n    duration\n  } = _ref;\n\n  const formatDate = date => {\n    var d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + d.getDate();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [month, day].join(\"-\");\n  };\n\n  const lineChart = pastDataPeriod.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: pastDataPeriod.map((_ref2, i) => {\n        let {\n          date\n        } = _ref2;\n        return formatDate(date);\n      }),\n      datasets: [{\n        data: pastDataPeriod.map(_ref3 => {\n          let {\n            adjClose\n          } = _ref3;\n          return adjClose;\n        }),\n        label: \"Price\",\n        borderColor: \"rgba(0, 0, 255, 0.5)\",\n        fill: true,\n        backgroundColor: \"rgba(116, 185, 255, 0.2)\"\n      }]\n    },\n    options: {\n      maintainAspectRatio: false,\n      elements: {\n        point: {\n          radius: 2\n        }\n      },\n      legend: {\n        display: false\n      },\n      layout: {\n        padding: {\n          left: 20,\n          right: 20,\n          top: 15,\n          bottom: 0\n        }\n      },\n      title: {\n        display: true,\n        text: `Adjusted closing stock price of ${stockInfo.ticker} over the past ${duration}`,\n        position: \"bottom\"\n      },\n      animation: {\n        duration: 2000\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this) : null;\n  return lineChart;\n};\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/prachichatur/Documents/webd/stock-trading-simulator-master/client/src/components/Template/LineChart.jsx"],"names":["React","Line","Chart","LineChart","pastDataPeriod","stockInfo","duration","formatDate","date","d","Date","month","getMonth","day","getDate","length","join","lineChart","labels","map","i","datasets","data","adjClose","label","borderColor","fill","backgroundColor","maintainAspectRatio","elements","point","radius","legend","display","layout","padding","left","right","top","bottom","title","text","ticker","position","animation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;;AAEA,MAAMC,SAAS,GAAG,QAA6C;AAAA,MAA5C;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA;AAA7B,GAA4C;;AAC7D,QAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,QAAIC,CAAC,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAR;AAAA,QACEG,KAAK,GAAG,MAAMF,CAAC,CAACG,QAAF,KAAe,CAArB,CADV;AAAA,QAEEC,GAAG,GAAG,KAAKJ,CAAC,CAACK,OAAF,EAFb;AAIA,QAAIH,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAsBJ,KAAK,GAAG,MAAMA,KAAd;AACtB,QAAIE,GAAG,CAACE,MAAJ,GAAa,CAAjB,EAAoBF,GAAG,GAAG,MAAMA,GAAZ;AAEpB,WAAO,CAACF,KAAD,EAAQE,GAAR,EAAaG,IAAb,CAAkB,GAAlB,CAAP;AACD,GATD;;AAWA,QAAMC,SAAS,GACbb,cAAc,CAACW,MAAf,GAAwB,CAAxB,gBACE,QAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJG,MAAAA,MAAM,EAAEd,cAAc,CAACe,GAAf,CAAmB,QAAWC,CAAX;AAAA,YAAC;AAAEZ,UAAAA;AAAF,SAAD;AAAA,eAAiBD,UAAU,CAACC,IAAD,CAA3B;AAAA,OAAnB,CADJ;AAEJa,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,IAAI,EAAElB,cAAc,CAACe,GAAf,CAAmB;AAAA,cAAC;AAAEI,YAAAA;AAAF,WAAD;AAAA,iBAAkBA,QAAlB;AAAA,SAAnB,CADR;AAEEC,QAAAA,KAAK,EAAE,OAFT;AAGEC,QAAAA,WAAW,EAAE,sBAHf;AAIEC,QAAAA,IAAI,EAAE,IAJR;AAKEC,QAAAA,eAAe,EAAE;AALnB,OADQ;AAFN,KADR;AAaE,IAAA,OAAO,EAAE;AACPC,MAAAA,mBAAmB,EAAE,KADd;AAEPC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE;AADH;AADC,OAFH;AAOPC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAPD;AAQPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,EADC;AAEPC,UAAAA,KAAK,EAAE,EAFA;AAGPC,UAAAA,GAAG,EAAE,EAHE;AAIPC,UAAAA,MAAM,EAAE;AAJD;AADH,OARD;AAgBPC,MAAAA,KAAK,EAAE;AACLP,QAAAA,OAAO,EAAE,IADJ;AAELQ,QAAAA,IAAI,EAAG,mCAAkCpC,SAAS,CAACqC,MAAO,kBAAiBpC,QAAS,EAF/E;AAGLqC,QAAAA,QAAQ,EAAE;AAHL,OAhBA;AAqBPC,MAAAA,SAAS,EAAE;AACTtC,QAAAA,QAAQ,EAAE;AADD;AArBJ;AAbX;AAAA;AAAA;AAAA;AAAA,UADF,GAwCI,IAzCN;AA2CA,SAAOW,SAAP;AACD,CAxDD;;KAAMd,S;AA0DN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport Chart from 'chart.js/auto';\n\nconst LineChart = ({ pastDataPeriod, stockInfo, duration }) => {\n  const formatDate = (date) => {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [month, day].join(\"-\");\n  };\n\n  const lineChart =\n    pastDataPeriod.length > 0 ? (\n      <Line\n        data={{\n          labels: pastDataPeriod.map(({ date }, i) => formatDate(date)),\n          datasets: [\n            {\n              data: pastDataPeriod.map(({ adjClose }) => adjClose),\n              label: \"Price\",\n              borderColor: \"rgba(0, 0, 255, 0.5)\",\n              fill: true,\n              backgroundColor: \"rgba(116, 185, 255, 0.2)\",\n            },\n          ],\n        }}\n        options={{\n          maintainAspectRatio: false,\n          elements: {\n            point: {\n              radius: 2,\n            },\n          },\n          legend: { display: false },\n          layout: {\n            padding: {\n              left: 20,\n              right: 20,\n              top: 15,\n              bottom: 0,\n            },\n          },\n          title: {\n            display: true,\n            text: `Adjusted closing stock price of ${stockInfo.ticker} over the past ${duration}`,\n            position: \"bottom\",\n          },\n          animation: {\n            duration: 2000,\n          },\n        }}\n      />\n    ) : null;\n\n  return lineChart;\n};\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}